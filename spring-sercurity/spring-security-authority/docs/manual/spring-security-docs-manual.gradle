apply plugin: 'io.spring.convention.docs'
apply plugin: 'io.spring.convention.springdependencymangement'
apply plugin: 'io.spring.convention.dependency-set'
apply plugin: 'io.spring.convention.repository'
apply plugin: 'java'

asciidoctor {
	attributes([stylesheet: 'css/style.css'])
	resources {
		from(sourceDir) {
			include "css/**"
		}
	}
}

asciidoctorj {
	def ghTag = snapshotBuild ? 'master' : project.version
	def ghUrl = "https://github.com/spring-projects/spring-security/tree/$ghTag"
	attributes 'spring-security-version' : project.version,
		'spring-boot-version' : springBootVersion,
		revnumber : project.version,
		'gh-url': ghUrl,
		'gh-samples-url': "$ghUrl/samples"
	attributeProvider resolvedVersions(project.configurations.testCompile)
}

docsZip {
	from(project(':spring-security-docs-guides').asciidoctor) {
		into 'guides'
	}
}

dependencies {
	testCompile "com.unboundid:unboundid-ldapsdk"
	testCompile "org.apache.directory.server:apacheds-core"
	testCompile "org.springframework:spring-core"
}

def resolvedVersions(Configuration configuration) {
	return {
		configuration.resolvedConfiguration
			.resolvedArtifacts
			.collectEntries { [(it.name + "-version"): it.moduleVersion.id.version] }
	}
}
